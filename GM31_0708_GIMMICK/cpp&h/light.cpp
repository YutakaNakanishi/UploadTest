//=============================================================================
//
// ライト処理 [light.cpp]
// Author : yutaka nakanishi
//
//=============================================================================
#include "light.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************


//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************


//*****************************************************************************
// グローバル変数
//*****************************************************************************


//=============================================================================
// コンストラクタ
//=============================================================================
CLight::CLight()
{}
//=============================================================================
// デストラクタ
//=============================================================================
CLight::~CLight()
{}

//=============================================================================
// ライトの初期化処理
//=============================================================================

HRESULT CLight::Init(LPDIRECT3DDEVICE9 pDevice)
{

	//メインライト
	ZeroMemory(&m_aLight[0],sizeof(D3DLIGHT9));
	m_aLight[0].Type=D3DLIGHT_DIRECTIONAL;
	m_aLight[0].Diffuse=D3DXCOLOR(1.0,1.0,1.0,1.0);
	m_aVecDir[0]=D3DXVECTOR3(50,-10,20);

	D3DXVec3Normalize((D3DXVECTOR3*)&m_aLight[0].Direction,
									&m_aVecDir[0]);

	pDevice->SetLight(0,&m_aLight[0]);
	pDevice->LightEnable(0,TRUE);
	//リアライト
	ZeroMemory(&m_aLight[1],sizeof(D3DLIGHT9));
	m_aLight[1].Type=D3DLIGHT_DIRECTIONAL;
	m_aLight[1].Diffuse=D3DXCOLOR(0.7,0.7,0.7,1.0);
	m_aVecDir[1]=D3DXVECTOR3(-30,10,-10);

	D3DXVec3Normalize((D3DXVECTOR3*)&m_aLight[1].Direction,
									&m_aVecDir[1]);

	pDevice->SetLight(1,&m_aLight[1]);
	pDevice->LightEnable(1,TRUE);

	//バックライト
	ZeroMemory(&m_aLight[2],sizeof(D3DLIGHT9));
	m_aLight[2].Type=D3DLIGHT_DIRECTIONAL;
	m_aLight[2].Diffuse=D3DXCOLOR(0.3,0.3,0.3,1.0);
	m_aVecDir[2]=D3DXVECTOR3(30,0,50);

	D3DXVec3Normalize((D3DXVECTOR3*)&m_aLight[2].Direction,
									&m_aVecDir[2]);

	pDevice->SetLight(2,&m_aLight[2]);
	pDevice->LightEnable(2,TRUE);

	pDevice->SetRenderState(D3DRS_LIGHTING,TRUE);


	return S_OK;
}

//=============================================================================
// ライトの終了処理
//=============================================================================
void CLight::Uninit(void)
{
}

//=============================================================================
// ライトの更新処理
//=============================================================================
void CLight::Update(void)
{
}

